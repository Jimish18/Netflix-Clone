{"ast":null,"code":"var _jsxFileName = \"/home/jimish18/workplace/WebDev/react/Netflix-Clone/src/components/Banner/Banner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Banner.css';\nimport axios from '../axios';\nimport requests from '../Requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Banner = () => {\n  _s();\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\n      return request;\n    }\n    fetchData();\n  }, []);\n  console.log(movie);\n  const truncate = (string, n) => {\n    return (string === null || string === void 0 ? void 0 : string.length) > n ? string.substr(0, n - 1) + \"...\" : string;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"banner\",\n      style: {\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie === null || movie === void 0 ? void 0 : movie.backdrop_path}\")`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center top\",\n        backgroundRepeat: \"no-repeat\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bannerContents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.original_name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bannerButtons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: \"My List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bannerDescription\",\n          children: truncate(movie === null || movie === void 0 ? void 0 : movie.overview, 200)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bannerFadeBottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Banner, \"MfDhwyRtadaUcNRorKdIhwLwKSM=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useEffect","useState","axios","requests","jsxDEV","_jsxDEV","Fragment","_Fragment","Banner","_s","movie","setMovie","fetchData","request","get","fetchNetflixOriginals","data","results","Math","floor","random","length","console","log","truncate","string","n","substr","children","className","style","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","backgroundRepeat","title","name","original_name","fileName","_jsxFileName","lineNumber","columnNumber","overview","_c","$RefreshReg$"],"sources":["/home/jimish18/workplace/WebDev/react/Netflix-Clone/src/components/Banner/Banner.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Banner.css'\nimport  axios  from '../axios'\nimport requests from '../Requests'\n\nconst Banner = () => {\n\n    const [movie,setMovie] = useState([]);\n\n    useEffect(()=>\n    {\n        async function fetchData()\n        {\n            const request = await axios.get(requests.fetchNetflixOriginals)\n            setMovie(\n                request.data.results[\n                    Math.floor(Math.random() * request.data.results.length-1)\n                ]\n            )\n\n            return request;\n        }\n        fetchData();\n    },[])\n\n    \n    console.log(movie)\n    const truncate = (string, n) =>\n    {\n        return string?.length > n ? string.substr(0,n-1) + \"...\" : string;\n    }\n  return (\n    <>\n    <header className=\"banner\"\n    style={{\n        backgroundImage : `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n        backgroundSize : \"cover\",\n        backgroundPosition : \"center top\",\n        backgroundRepeat : \"no-repeat\"\n    }}\n    >\n        <div className=\"bannerContents\">\n            <h1>\n                {movie?.title || movie?.name || movie?.original_name}\n            </h1>\n            <div className=\"bannerButtons\">\n                <button className='btn'>Play</button>\n                <button className='btn'>My List</button>\n            </div>\n            <div className=\"bannerDescription\">\n                {truncate(movie?.overview,200)}\n            </div>\n        </div>\n\n        <div className=\"bannerFadeBottom\"></div>\n    </header>\n    </>\n  )\n}\n\nexport default Banner;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}